How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Viewing a diff helped to know what exactly changed in comparison to the the past version, and where did one go wrong.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Sometimes the first idea is the right one, but one ends up replacing or modifying it in hopes of getting a better version. So one can go back, also one can look at their old code and see the progess they have made and be motivated via it.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros- We decide, sometimes even small changes can fix big things, and other times even big changes do small stuff, so we get to decide.
	Cons- We could forget stuff, what may feel good commit for one person, may feel odd to other person. Sync problems could be there.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    This is because any project as it may, is not just a single file, it is more than that, it is larger than that and all of it is related somewhere. So we need multiple files in one commit.

How can you use the commands git log and git diff to view the history of files?

    We can use it to check the difference, sometimes there might be just typing errors. We can see the progress we have  made with these commands.
	
How might using version control make you more confident to make changes that
could break something?

    It encourages us to take risks, which we might not in case without version control. That is why we require this.

Now that you have your workspace set up, what do you want to try using Git for?

    I don't know, I am not much a dev yet, but when I am, I would love to use it for all my projects
